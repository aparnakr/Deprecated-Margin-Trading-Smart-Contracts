{
  "contractName": "FactoryStorage",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerAddresses",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner1",
          "type": "address"
        },
        {
          "name": "owner2",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"owner1\",\"type\":\"address\"},{\"name\":\"owner2\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/zubinkoticha/WebstormProjects/Truffled/contracts/FactoryStorage.sol\":\"FactoryStorage\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/zubinkoticha/WebstormProjects/Truffled/contracts/FactoryStorage.sol\":{\"keccak256\":\"0x598bdc9cf5a4ebcedf55c460bb8c423dc7d474e890acb2b2c9c21a5c722200ca\",\"urls\":[\"bzzr://0a198c361865eda76d6a32af04105ecdf42514ac10db3a348ddf0618df2621b6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405160408061023a8339810180604052604081101561003057600080fd5b810190808051906020019092919080519060200190929190505050336000806003811061005957fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160006001600381106100a757fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060006002600381106100f557fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060f6806101446000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80630f310b1714602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506098565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000816003811060a457fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820068361b213f32b7821e06226f10faca50c974928b53f61ebbf005bcf3100f80f0029",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80630f310b1714602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506098565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000816003811060a457fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820068361b213f32b7821e06226f10faca50c974928b53f61ebbf005bcf3100f80f0029",
  "sourceMap": "25:3467:0:-;;;633:170;8:9:-1;5:2;;;30:1;27;20:12;5:2;633:170:0;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;633:170:0;;;;;;;;;;;;;;;;;;;;;;;;;714:10;694:14;709:1;694:17;;;;;;;;;:30;;;;;;;;;;;;;;;;;;754:6;734:14;749:1;734:17;;;;;;;;;:26;;;;;;;;;;;;;;;;;;790:6;770:14;785:1;770:17;;;;;;;;;:26;;;;;;;;;;;;;;;;;;633:170;;25:3467;;;;;;",
  "deployedSourceMap": "25:3467:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:3467:0;;;;;;;;;;;;;;;;;;;379:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;379:32:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.8;\n\ncontract FactoryStorage {\n\n////    struct Trade? {\n////        address exchangeContract?;\n////        address xyz;\n////    }\n////TODO: think about - using SafeMath for uint;\n////TODO: add events\n////uint256 public constant DECIMALS = 18;\n//\n//    address public factoryLogicAddress;\n//\n//    //TODO: is the following how you declare arrays properly?\n    address[3] public ownerAddresses;\n//\n//    address[] public userAddresses;\n//    address[] public tokenAddresses;\n//    //TODO: figure out camelcase for the following\n//    address[] public ctokenAddresses;\n//    address[] public exchangeAddresses;\n\n    constructor(address owner1, address owner2) public {\n        ownerAddresses[0] = msg.sender;\n        ownerAddresses[1] = owner1;\n        ownerAddresses[2] = owner2;\n    }\n\n//    function getOwner() public view returns(address) {\n//        return owner;\n//    }\n//\n//    //TODO: write explainer on the following mapping\n//    mapping(bytes32 => mapping (address => address)) public positionContractAddresses;\n//\n//    // userAddr => shortRepAddr\n//    mapping (address => address) public REP;\n//    mapping (address => address) public ZRX;\n//\n//    function setFactoryLogicAddress(address newAddress) public {\n//        require(ownerAddresses[0] == msg.sender || ownerAddresses[1] == msg.sender || ownerAddresses[2] == msg.sender);\n//        //TODO: better security practices required than the above\n//        factoryLogicAddress = newAddress;\n//    }\n//\n////    // returns \"REP1, \"REP2 ...\"\n////    function getPositionNames () {}\n////\n////    // All the Set and Add functions can only be called by the factory logic? contract\n////    function updateUserAddress(i, val){}\n//\n//    function addUser(address newAddress) public {\n//        require(factoryLogicAddress == msg.sender);\n//        //TODO: ensure push actually works\n//        userAddresses.push(newAddress);\n//    }\n//\n//    function addTokenAddress(address newAddress) public {\n//        require(factoryLogicAddress == msg.sender);\n//        tokenAddresses.push(newAddress);\n//    }\n//\n//    function updateTokenAddress(uint256 index, address newAddress) public {\n//        require(factoryLogicAddress == msg.sender);\n//        tokenAddresses[index] = newAddress;\n//    }\n//\n//    function addcTokenAddress(address newAddress) public {\n//        require(factoryLogicAddress == msg.sender);\n//        ctokenAddresses.push(newAddress);\n//    }\n//\n//    function updatecTokenAddress(uint256 index, address newAddress) public {\n//        require(factoryLogicAddress == msg.sender);\n//        ctokenAddresses[index] = newAddress;\n//    }\n//\n//    function addExchangeAddress(address newAddress) public {\n//        require(factoryLogicAddress == msg.sender);\n//        exchangeAddresses.push(newAddress);\n//    }\n//\n//    function updateExchangeAddress(uint256 index, address newAddress) public {\n//        require(factoryLogicAddress == msg.sender);\n//        exchangeAddresses[index] = newAddress;\n//    }\n//\n////    function addPositionName(newKey) {\n////        require(factoryLogicAddress == msg.sender);\n////        exchangeAddresses[index] = newAddress;\n////    }\n//\n//    function addNewTokenToPositionContracts (address tokenAddr, address cTokenAddr, address exchangeAddr, bytes32 positionKey) public {\n//    }\n//\n//    function addNewPositionContract(uint256 positionIndex, address userAddress, address contractAddress) public {\n//    // ensure position key Exists first at that index\n//    }\n}",
  "sourcePath": "/Users/zubinkoticha/WebstormProjects/Truffled/contracts/FactoryStorage.sol",
  "ast": {
    "absolutePath": "/Users/zubinkoticha/WebstormProjects/Truffled/contracts/FactoryStorage.sol",
    "exportedSymbols": {
      "FactoryStorage": [
        33
      ]
    },
    "id": 34,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 33,
        "linearizedBaseContracts": [
          33
        ],
        "name": "FactoryStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "name": "ownerAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 33,
            "src": "379:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$3_storage",
              "typeString": "address[3]"
            },
            "typeName": {
              "baseType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "379:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4,
              "length": {
                "argumentTypes": null,
                "hexValue": "33",
                "id": 3,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "387:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "ArrayTypeName",
              "src": "379:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                "typeString": "address[3]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "684:119:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12,
                        "name": "ownerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "694:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage",
                          "typeString": "address[3] storage ref"
                        }
                      },
                      "id": 14,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "709:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "694:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "714:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "714:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "694:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "694:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "ownerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "734:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage",
                          "typeString": "address[3] storage ref"
                        }
                      },
                      "id": 21,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "749:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "734:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "owner1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "754:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "734:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "734:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "ownerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "770:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage",
                          "typeString": "address[3] storage ref"
                        }
                      },
                      "id": 27,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "785:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "770:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "owner2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "790:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "770:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "770:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 32,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "owner1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "645:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "name": "owner2",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "661:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "644:32:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:0:0"
            },
            "scope": 33,
            "src": "633:170:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 34,
        "src": "25:3467:0"
      }
    ],
    "src": "0:3492:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/zubinkoticha/WebstormProjects/Truffled/contracts/FactoryStorage.sol",
    "exportedSymbols": {
      "FactoryStorage": [
        33
      ]
    },
    "id": 34,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 33,
        "linearizedBaseContracts": [
          33
        ],
        "name": "FactoryStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "name": "ownerAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 33,
            "src": "379:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$3_storage",
              "typeString": "address[3]"
            },
            "typeName": {
              "baseType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "379:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4,
              "length": {
                "argumentTypes": null,
                "hexValue": "33",
                "id": 3,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "387:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "ArrayTypeName",
              "src": "379:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                "typeString": "address[3]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "684:119:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12,
                        "name": "ownerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "694:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage",
                          "typeString": "address[3] storage ref"
                        }
                      },
                      "id": 14,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "709:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "694:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "714:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "714:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "694:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "694:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "ownerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "734:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage",
                          "typeString": "address[3] storage ref"
                        }
                      },
                      "id": 21,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "749:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "734:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "owner1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "754:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "734:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "734:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "ownerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "770:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_storage",
                          "typeString": "address[3] storage ref"
                        }
                      },
                      "id": 27,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "785:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "770:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "owner2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "790:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "770:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "770:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 32,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "owner1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "645:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "name": "owner2",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "661:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "644:32:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:0:0"
            },
            "scope": 33,
            "src": "633:170:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 34,
        "src": "25:3467:0"
      }
    ],
    "src": "0:3492:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1559274909945": {
      "events": {},
      "links": {},
      "address": "0x6b5F0B6dF7EFbe12FAE065adC6747Ecaa69676cb",
      "transactionHash": "0x43777134c8e07bb46f9022f7f903736d888634e6ddbd6a9f592114772ef4c420"
    },
    "1559279091038": {
      "events": {},
      "links": {},
      "address": "0xD5C519242fae2deC224268A6f68d720Fc7fDd9f9",
      "transactionHash": "0x81a4f260d88a070a58fa2fb154ec1228f3657cfbfb71535f6916719d3e19a421"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-05-31T05:10:47.601Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}